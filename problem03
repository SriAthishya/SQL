/* Delete the tables if they already exist */
drop table if exists Movie;
drop table if exists Reviewer;
drop table if exists Rating;

/* Create the schema for our tables */
create table Movie(mID int, title text, year int, director text);
create table Reviewer(rID int, name text);
create table Rating(rID int, mID int, stars int, ratingDate date);

/* Populate the tables with our data */
insert into Movie values(101, 'Gone with the Wind', 1939, 'Victor Fleming');
insert into Movie values(102, 'Star Wars', 1977, 'George Lucas');
insert into Movie values(103, 'The Sound of Music', 1965, 'Robert Wise');
insert into Movie values(104, 'E.T.', 1982, 'Steven Spielberg');
insert into Movie values(105, 'Titanic', 1997, 'James Cameron');
insert into Movie values(106, 'Snow White', 1937, null);
insert into Movie values(107, 'Avatar', 2009, 'James Cameron');
insert into Movie values(108, 'Raiders of the Lost Ark', 1981, 'Steven Spielberg');

insert into Reviewer values(201, 'Sarah Martinez');
insert into Reviewer values(202, 'Daniel Lewis');
insert into Reviewer values(203, 'Brittany Harris');
insert into Reviewer values(204, 'Mike Anderson');
insert into Reviewer values(205, 'Chris Jackson');
insert into Reviewer values(206, 'Elizabeth Thomas');
insert into Reviewer values(207, 'James Cameron');
insert into Reviewer values(208, 'Ashley White');

insert into Rating values(201, 101, 2, '2011-01-22');
insert into Rating values(201, 101, 4, '2011-01-27');
insert into Rating values(202, 106, 4, null);
insert into Rating values(203, 103, 2, '2011-01-20');
insert into Rating values(203, 108, 4, '2011-01-12');
insert into Rating values(203, 108, 2, '2011-01-30');
insert into Rating values(204, 101, 3, '2011-01-09');
insert into Rating values(205, 103, 3, '2011-01-27');
insert into Rating values(205, 104, 2, '2011-01-22');
insert into Rating values(205, 108, 4, null);
insert into Rating values(206, 107, 3, '2011-01-15');
insert into Rating values(206, 106, 5, '2011-01-19');
insert into Rating values(207, 107, 5, '2011-01-20');
insert into Rating values(208, 104, 3, '2011-01-02');

/*1.titles of all movies directed by Steven Spielberg*/
select title from movie where director='Steven Spielberg';

title
E.T.
Raiders of the Lost Ark

/*2. years that have a movie that received a rating of 4 or 5,sort them in increasing order*/
select year from movie where mid in (
select mid from rating where stars>=4);

year
1939
1937
2009
1981

/*3.titles of all movies that have no ratings*/
select title from movie where mid not in(
select distinct m.mid from movie m inner join rating r on r.mid==m.mid);

title
Star Wars
Titanic

/*4. names of all reviewers who have ratings with a NULL value for the date*/
select name from reviewer where rid in
(select rid from rating where ratingdate is Null);

name
Daniel Lewis
Chris Jackson

/*5.reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name,
 then by movie title, and lastly by number of stars*/
 select r.name,m.title,ra.stars,ra.ratingdate from movie m join rating ra on ra.mid=m.mid
 join reviewer r on r.rid=ra.rid order by r.name,m.title,ra.stars;

name               title                    stars    ratingdate
Ashley White   	    E.T.	                      3	     2011-01-02
Brittany Harris	   Raiders of the Lost Ark	    2	     2011-01-30
Brittany Harris   	Raiders of the Lost Ark	    4	     2011-01-12
Brittany Harris	   The Sound of Music	         2	     2011-01-20
Chris Jackson	     E.T.	                       2     	2011-01-22
Chris Jackson	     Raiders of the Lost Ark	    4	      
Chris Jackson	     The Sound of Music	         3	     2011-01-27
Daniel Lewis	      Snow White                 	4	
Elizabeth Thomas	  Avatar	                     3	     2011-01-15
Elizabeth Thomas	  Snow White	                 5     	2011-01-19
James Cameron     	Avatar	                     5	     2011-01-20
Mike Anderson	     Gone with the Wind	         3	     2011-01-09
Sarah Martinez	    Gone with the Wind	         2	     2011-01-22
Sarah Martinez	    Gone with the Wind	         4	     2011-01-27
 
/*6.For all cases where the same reviewer rated the same movie twice and gave it a higher rating the 
second time, return the reviewer's name and the title of the movie*/
select distinct re.name,m.title from movie m join rating ra on ra.mid=m.mid join reviewer re on re.rid=ra.rid 
where (ra.rid,ra.mid) in
(select r.rid,r.mid from rating r join rating r1 on r.mid=r1.mid where r.stars<r1.stars and r.ratingdate<r1.ratingdate
and (r.rid,r.mid) in (select rid,mid from rating group by rid,mid having count(rid)>1));

name title
Sarah Martinez	Gone with the Wind

/*7.Return the movie title and number of stars,highest number of stars that movie received
Sort by movie title*/
select m.title,max(r.stars) no_of_stars from movie m join rating r on m.mid=r.mid group by r.mid order by
m.title;

title                no_of_stars
Avatar	                  5
E.T.	                    3
Gone with the Wind	      4
Raiders of the Lost Ark 	4
Snow White	              5
The Sound of Music	      3 

/*8.return the title and the 'rating spread', that is, the difference between highest and lowest ratings given
 to that movie. Sort by rating spread from highest to lowest, then by movie title*/
 select title,(max(stars)-min(stars)) rating_spread from rating r join movie m on r.mid=m.mid
 group by r.mid order by rating_spread desc,title;

title                 rating_spread
Avatar	                    2
Gone with the Wind	        2
Raiders of the Lost Ark	   2
E.T.                      	1
Snow White                	1
The Sound of Music	        1

/*9.Find the difference between the average rating of movies released before 1980 and the average rating of movies
 released after 1980. (Make sure to calculate the average rating for each movie, then the average of those averages 
 for movies before 1980 and movies after. Don't just calculate the overall average rating before and after 1980.)*/

/*select mid,avg(stars) from rating group by mid;
select avg(stars) before1980 from movie m join (select mid,avg(stars) stars from rating group by mid) r on r.mid=m.mid where m.year<1980;
select avg(stars) after1980 from movie m join (select mid,avg(stars) stars from rating group by mid) r on r.mid=m.mid where m.year>1980;*/

select avg(before1980)-avg(after1980) as avg_diff_stars from (select avg(stars) before1980 from movie m join (select mid,avg(stars) stars from rating group by mid) r on r.mid=m.mid where m.year<1980) join 
(select avg(stars) after1980 from movie m join (select mid,avg(stars) stars from rating group by mid) r on r.mid=m.mid where m.year>1980);

avg_diff_stars
0.05555555555556

/*10.names of all reviewers who rated Gone with the Wind*/
select distinct name from reviewer r join rating ra on r.rid=ra.rid where ra.mid in
(select mid from movie where title='Gone with the Wind');

name
Sarah Martinez
Mike Anderson

/*11.For any rating where the reviewer is the same as the director of the movie, return the reviewer name, 
movie title, and number of stars*/
select r.name,m.title,count(ra.stars) no_of_stars from movie m join rating ra on ra.mid=m.mid join reviewer r on 
r.rid=ra.rid where m.director=r.name;

name              title   no_of_stars
James Cameron	   Avatar	      1 

/*12.Return all reviewer names and movie names together in a single list, alphabetized.*/
select distinct r.name,m.title from reviewer r join rating ra on r.rid=ra.rid join movie m on m.mid=ra.mid
order by m.title,r.name;

name                title
Elizabeth Thomas	   Avatar
James Cameron	      Avatar
Ashley White	       E.T.
Chris Jackson	      E.T.
Mike Anderson	      Gone with the Wind
Sarah Martinez	     Gone with the Wind
Brittany Harris	    Raiders of the Lost Ark
Chris Jackson	      Raiders of the Lost Ark
Daniel Lewis	       Snow White
Elizabeth Thomas	   Snow White
Brittany Harris	    The Sound of Music
Chris Jackson	      The Sound of Music

/*13.titles of all movies not reviewed by Chris Jackson*/
select title from movie where mid not in 
(select mid from rating where rid =(select rid from reviewer where name='Chris Jackson'));

title
Gone with the Wind
Star Wars
Titanic
Snow White
Avatar

/*14.For all pairs of reviewers such that both reviewers gave a rating to the same movie, 
return the names of both reviewers*/
select m1.name reviewer1,m2.name reviewer2 from reviewer m1 join (select distinct r1.rid rid1,r2.rid rid2 
from rating r1 join rating r2 on r1.mid=r2.mid where r2.rid<>r1.rid group by r1.mid) p
on p.rid1=m1.rid join reviewer m2 on p.rid2=m2.rid order by m1.name,m2.name;

reviewer1              reviewer2
Ashley White	        Chris Jackson
Chris Jackson	       Brittany Harris
Elizabeth Thomas    	Daniel Lewis
James Cameron	       Elizabeth Thomas
Mike Anderson	       Sarah Martinez

/*15.return the reviewer name, movie title, and number of stars For each rating that is the lowest (fewest stars) 
currently in the database*/
select r.name,m.title,stars number_of_stars from reviewer r join rating ra on ra.rid=r.rid join movie m on m.mid=ra.mid
where stars=(select min(stars) from rating );

name                title              number_of_stars
Sarah Martinez	    Gone with the Wind	        2
Brittany Harris	   The Sound of Music	        2
Brittany Harris	   Raiders of the Lost Ark	   2
Chris Jackson	     E.T.                      	2

/*16.List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, 
list them in alphabetical order*/
select m.title,avg(stars) from rating r join movie m on m.mid=r.mid group by r.mid order by avg(stars) desc,title;

title                     avg(stars)
Snow White	                  4.5
Avatar	                       4
Raiders of the Lost Ark   	3.33333333333333
Gone with the Wind	           3
E.T.	                         2.5
The Sound of Music           	2.5

/*17.Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, 
try writing the query without HAVING or without COUNT.)*/
select name from reviewer where rid in (select rid from rating group by rid having count(*)>2);

name
Brittany Harris
Chris Jackson

/*18.Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, 
along with the director name. Sort by director name, then movie title. (As an extra challenge, try writing the query both with 
and without COUNT.)*/
select title,director from movie where director in 
(select director from movie group by director having count(*)>1) order by director,title;

title                             director
Avatar	                         James Cameron
Titanic	                        James Cameron
E.T.      	                     Steven Spielberg
Raiders of the Lost Ark	        Steven Spielberg

/*19.Find the movie(s) with the highest average rating. Return the movie title(s) and average rating. (Hint: This query is more 
difficult to write in SQLite than other systems; you might think of it as finding the highest average rating and then choosing the 
movie(s) with that average rating.)*/
select title,avg(stars) avg_rating from rating r1 join movie m1 on r1.mid=m1.mid group by r1.mid having avg(stars) in
(select max(stars) from (select avg(stars) stars from rating r join movie m on r.mid=m.mid group by r.mid));

title      avg_rating
Snow White	   4.5

/*20.Find the movie(s) with the lowest average rating. Return the movie title(s) and average rating. (Hint: This query may be more 
difficult to write in SQLite than other systems; you might think of it as finding the lowest average rating and then choosing the 
movie(s) with that average rating.)*/
select title,avg(stars) avg_rating from rating r1 join movie m1 on r1.mid=m1.mid group by r1.mid having avg(stars) in
(select min(stars) from (select avg(stars) stars from rating r join movie m on r.mid=m.mid group by r.mid));

title                 avg_rating
The Sound of Music	      2.5
E.T.	                    2.5

/*21.For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest 
rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.*/
select director,title,max(stars) rating from movie m join rating r on r.mid=m.mid where director is not null group by r.mid
order by director;

director               title                  rating
James Cameron	       Avatar              	       5
Robert Wise      	   The Sound of Music	         3
Steven Spielberg 	   E.T.	                       3
Steven Spielberg	    Raiders of the Lost Ark	    4
Victor Fleming	      Gone with the Wind         	4


select * from Movie;
select * from Rating;
select * from Reviewer;




